// Source: https://github.com/FilipePS/Traduzir-paginas-web/blob/f3a4956a1aa96b7a9124864158a5200827694521/background/translationService.js
var lastYandexRequestSIDTime = null;
var yandexTranslateSID = null;
var yandexSIDNotFound = false;
export function getYandexSID(fetcher) {
    return new Promise(function (resolve) {
        var updateYandexSid = false;
        if (lastYandexRequestSIDTime) {
            var date = new Date();
            if (yandexTranslateSID) {
                date.setHours(date.getHours() - 12);
            }
            else if (yandexSIDNotFound) {
                date.setMinutes(date.getMinutes() - 30);
            }
            else {
                date.setMinutes(date.getMinutes() - 2);
            }
            if (date.getTime() > lastYandexRequestSIDTime) {
                updateYandexSid = true;
            }
        }
        else {
            updateYandexSid = true;
        }
        if (updateYandexSid) {
            lastYandexRequestSIDTime = Date.now();
            var url = 'https://translate.yandex.net/website-widget/v1/widget.js?widgetId=ytWidget&pageLang=es&widgetTheme=light&autoMode=false';
            fetcher(url, { responseType: 'text' })
                .then(function (response) {
                var result = (typeof response.data === 'string' ? response.data : '').match(/sid\:\s\'[0-9a-f\.]+/);
                if (result && result[0] && result[0].length > 7) {
                    yandexTranslateSID = result[0].substring(6);
                    yandexSIDNotFound = false;
                }
                else {
                    yandexSIDNotFound = true;
                }
                resolve();
            })
                .catch(function (error) {
                console.error(error);
                resolve();
            });
        }
        else {
            resolve();
        }
    }).then(function () { return yandexTranslateSID; });
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0b3JzL1lhbmRleFRyYW5zbGF0b3IvZ2V0WWFuZGV4U0lELnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBJQUEwSTtBQUkxSSxJQUFJLHdCQUF3QixHQUFrQixJQUFJLENBQUM7QUFDbkQsSUFBSSxrQkFBa0IsR0FBa0IsSUFBSSxDQUFDO0FBQzdDLElBQUksaUJBQWlCLEdBQVksS0FBSyxDQUFDO0FBRXZDLE1BQU0sVUFBVSxZQUFZLENBQUMsT0FBZ0I7SUFDNUMsT0FBTyxJQUFJLE9BQU8sQ0FBTyxVQUFDLE9BQU87UUFDaEMsSUFBSSxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQzVCLElBQUksd0JBQXdCLEVBQUU7WUFDN0IsSUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUN4QixJQUFJLGtCQUFrQixFQUFFO2dCQUN2QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQzthQUNwQztpQkFBTSxJQUFJLGlCQUFpQixFQUFFO2dCQUM3QixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQzthQUN4QztpQkFBTTtnQkFDTixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQzthQUN2QztZQUNELElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLHdCQUF3QixFQUFFO2dCQUM5QyxlQUFlLEdBQUcsSUFBSSxDQUFDO2FBQ3ZCO1NBQ0Q7YUFBTTtZQUNOLGVBQWUsR0FBRyxJQUFJLENBQUM7U0FDdkI7UUFFRCxJQUFJLGVBQWUsRUFBRTtZQUNwQix3QkFBd0IsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDdEMsSUFBTSxHQUFHLEdBQ1IseUhBQXlILENBQUM7WUFFM0gsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsQ0FBQztpQkFDcEMsSUFBSSxDQUFDLFVBQUMsUUFBUTtnQkFDZCxJQUFNLE1BQU0sR0FBRyxDQUNkLE9BQU8sUUFBUSxDQUFDLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDdEQsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztnQkFFaEMsSUFBSSxNQUFNLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUNoRCxrQkFBa0IsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUM1QyxpQkFBaUIsR0FBRyxLQUFLLENBQUM7aUJBQzFCO3FCQUFNO29CQUNOLGlCQUFpQixHQUFHLElBQUksQ0FBQztpQkFDekI7Z0JBRUQsT0FBTyxFQUFFLENBQUM7WUFDWCxDQUFDLENBQUM7aUJBQ0QsS0FBSyxDQUFDLFVBQUMsS0FBSztnQkFDWixPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQixPQUFPLEVBQUUsQ0FBQztZQUNYLENBQUMsQ0FBQyxDQUFDO1NBQ0o7YUFBTTtZQUNOLE9BQU8sRUFBRSxDQUFDO1NBQ1Y7SUFDRixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBTSxPQUFBLGtCQUFrQixFQUFsQixDQUFrQixDQUFDLENBQUM7QUFDbkMsQ0FBQyIsImZpbGUiOiJ0cmFuc2xhdG9ycy9ZYW5kZXhUcmFuc2xhdG9yL2dldFlhbmRleFNJRC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL0ZpbGlwZVBTL1RyYWR1emlyLXBhZ2luYXMtd2ViL2Jsb2IvZjNhNDk1NmExYWE5NmI3YTkxMjQ4NjQxNThhNTIwMDgyNzY5NDUyMS9iYWNrZ3JvdW5kL3RyYW5zbGF0aW9uU2VydmljZS5qc1xuXG5pbXBvcnQgeyBGZXRjaGVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvRmV0Y2hlcic7XG5cbmxldCBsYXN0WWFuZGV4UmVxdWVzdFNJRFRpbWU6IG51bWJlciB8IG51bGwgPSBudWxsO1xubGV0IHlhbmRleFRyYW5zbGF0ZVNJRDogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5sZXQgeWFuZGV4U0lETm90Rm91bmQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFlhbmRleFNJRChmZXRjaGVyOiBGZXRjaGVyKSB7XG5cdHJldHVybiBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSkgPT4ge1xuXHRcdGxldCB1cGRhdGVZYW5kZXhTaWQgPSBmYWxzZTtcblx0XHRpZiAobGFzdFlhbmRleFJlcXVlc3RTSURUaW1lKSB7XG5cdFx0XHRjb25zdCBkYXRlID0gbmV3IERhdGUoKTtcblx0XHRcdGlmICh5YW5kZXhUcmFuc2xhdGVTSUQpIHtcblx0XHRcdFx0ZGF0ZS5zZXRIb3VycyhkYXRlLmdldEhvdXJzKCkgLSAxMik7XG5cdFx0XHR9IGVsc2UgaWYgKHlhbmRleFNJRE5vdEZvdW5kKSB7XG5cdFx0XHRcdGRhdGUuc2V0TWludXRlcyhkYXRlLmdldE1pbnV0ZXMoKSAtIDMwKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRhdGUuc2V0TWludXRlcyhkYXRlLmdldE1pbnV0ZXMoKSAtIDIpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGRhdGUuZ2V0VGltZSgpID4gbGFzdFlhbmRleFJlcXVlc3RTSURUaW1lKSB7XG5cdFx0XHRcdHVwZGF0ZVlhbmRleFNpZCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHVwZGF0ZVlhbmRleFNpZCA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKHVwZGF0ZVlhbmRleFNpZCkge1xuXHRcdFx0bGFzdFlhbmRleFJlcXVlc3RTSURUaW1lID0gRGF0ZS5ub3coKTtcblx0XHRcdGNvbnN0IHVybCA9XG5cdFx0XHRcdCdodHRwczovL3RyYW5zbGF0ZS55YW5kZXgubmV0L3dlYnNpdGUtd2lkZ2V0L3YxL3dpZGdldC5qcz93aWRnZXRJZD15dFdpZGdldCZwYWdlTGFuZz1lcyZ3aWRnZXRUaGVtZT1saWdodCZhdXRvTW9kZT1mYWxzZSc7XG5cblx0XHRcdGZldGNoZXIodXJsLCB7IHJlc3BvbnNlVHlwZTogJ3RleHQnIH0pXG5cdFx0XHRcdC50aGVuKChyZXNwb25zZSkgPT4ge1xuXHRcdFx0XHRcdGNvbnN0IHJlc3VsdCA9IChcblx0XHRcdFx0XHRcdHR5cGVvZiByZXNwb25zZS5kYXRhID09PSAnc3RyaW5nJyA/IHJlc3BvbnNlLmRhdGEgOiAnJ1xuXHRcdFx0XHRcdCkubWF0Y2goL3NpZFxcOlxcc1xcJ1swLTlhLWZcXC5dKy8pO1xuXG5cdFx0XHRcdFx0aWYgKHJlc3VsdCAmJiByZXN1bHRbMF0gJiYgcmVzdWx0WzBdLmxlbmd0aCA+IDcpIHtcblx0XHRcdFx0XHRcdHlhbmRleFRyYW5zbGF0ZVNJRCA9IHJlc3VsdFswXS5zdWJzdHJpbmcoNik7XG5cdFx0XHRcdFx0XHR5YW5kZXhTSUROb3RGb3VuZCA9IGZhbHNlO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHR5YW5kZXhTSUROb3RGb3VuZCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmVzb2x2ZSgpO1xuXHRcdFx0XHR9KVxuXHRcdFx0XHQuY2F0Y2goKGVycm9yKSA9PiB7XG5cdFx0XHRcdFx0Y29uc29sZS5lcnJvcihlcnJvcik7XG5cdFx0XHRcdFx0cmVzb2x2ZSgpO1xuXHRcdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVzb2x2ZSgpO1xuXHRcdH1cblx0fSkudGhlbigoKSA9PiB5YW5kZXhUcmFuc2xhdGVTSUQpO1xufVxuIl19
