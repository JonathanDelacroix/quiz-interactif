var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { BaseTranslator } from '../../BaseTranslator';
// FIXME: translator fails the test `Translate many texts with "translateBatch"` - fix it or remove this translator
var LingvaTranslate = /** @class */ (function (_super) {
    __extends(LingvaTranslate, _super);
    function LingvaTranslate(options) {
        var _this = this;
        var _a;
        _this = _super.call(this, options) || this;
        _this.apiHost = (_a = options.apiHost) !== null && _a !== void 0 ? _a : 'https://translate.plausibility.cloud';
        return _this;
    }
    LingvaTranslate.getSupportedLanguages = function () {
        // eslint-disable
        // prettier-ignore
        return [
            "en", "ar", "az", "zh", "cs",
            "nl", "eo", "fi", "fr", "de",
            "el", "hi", "hu", "id", "ga",
            "it", "ja", "ko", "fa", "pl",
            "pt", "ru", "sk", "es", "sv",
            "tr", "uk", "vi"
        ];
        // eslint-enable
    };
    LingvaTranslate.prototype.getLengthLimit = function () {
        return 5000;
    };
    LingvaTranslate.prototype.getRequestsTimeout = function () {
        return 300;
    };
    LingvaTranslate.prototype.checkLimitExceeding = function (text) {
        if (Array.isArray(text)) {
            var arrayLen = text.reduce(function (acc, text) { return acc + text.length; }, 0);
            var extra = arrayLen - this.getLengthLimit();
            return extra > 0 ? extra : 0;
        }
        else {
            var extra = text.length - this.getLengthLimit();
            return extra > 0 ? extra : 0;
        }
    };
    LingvaTranslate.prototype.translate = function (text, from, to) {
        return __awaiter(this, void 0, void 0, function () {
            var requestUrl;
            return __generator(this, function (_a) {
                requestUrl = "".concat(this.apiHost, "/api/v1/").concat(encodeURIComponent(from), "/").concat(encodeURIComponent(to), "/").concat(encodeURIComponent(text));
                return [2 /*return*/, this.fetch(this.wrapUrlToCorsProxy(requestUrl), {
                        responseType: 'json',
                        method: 'GET',
                        headers: __assign({ 'User-Agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:99.0) Gecko/20100101 Firefox/99.0', Accept: '*/*', 'Accept-Language': 'en-US,en;q=0.5', 'Sec-Fetch-Dest': 'empty', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Site': 'same-origin', 'Content-Type': 'application/x-www-form-urlencoded' }, this.options.headers),
                    }).then(function (rsp) {
                        if (typeof rsp.data !== 'object' ||
                            rsp.data === null ||
                            typeof rsp.data.translation !== 'string') {
                            throw new TypeError('Unexpected data');
                        }
                        return rsp.data.translation;
                    })];
            });
        });
    };
    LingvaTranslate.prototype.translateBatch = function (texts, from, to) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, Promise.all(texts.map(function (text) { return _this.translate(text, from, to); }))];
            });
        });
    };
    LingvaTranslate.translatorName = 'LingvaTranslate';
    LingvaTranslate.isRequiredKey = function () { return false; };
    LingvaTranslate.isSupportedAutoFrom = function () { return true; };
    return LingvaTranslate;
}(BaseTranslator));
export { LingvaTranslate };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0b3JzL3Vuc3RhYmxlL0xpbmd2YVRyYW5zbGF0ZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sRUFBRSxjQUFjLEVBQXFCLE1BQU0sc0JBQXNCLENBQUM7QUFFekUsbUhBQW1IO0FBQ25IO0lBQXFDLG1DQUFjO0lBeUJsRCx5QkFBWSxPQUEwQjtRQUF0QyxpQkFJQzs7Z0JBSEEsa0JBQU0sT0FBTyxDQUFDO1FBRWQsS0FBSSxDQUFDLE9BQU8sR0FBRyxNQUFBLE9BQU8sQ0FBQyxPQUFPLG1DQUFJLHNDQUFzQyxDQUFDOztJQUMxRSxDQUFDO0lBdEJhLHFDQUFxQixHQUFuQztRQUNDLGlCQUFpQjtRQUNqQixrQkFBa0I7UUFDbEIsT0FBTztZQUNOLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQzVCLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQzVCLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQzVCLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQzVCLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJO1lBQzVCLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtTQUNoQixDQUFDO1FBQ0YsZ0JBQWdCO0lBQ2pCLENBQUM7SUFZTSx3Q0FBYyxHQUFyQjtRQUNDLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQztJQUVNLDRDQUFrQixHQUF6QjtRQUNDLE9BQU8sR0FBRyxDQUFDO0lBQ1osQ0FBQztJQUVNLDZDQUFtQixHQUExQixVQUEyQixJQUF1QjtRQUNqRCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDeEIsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFDLEdBQUcsRUFBRSxJQUFJLElBQUssT0FBQSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBakIsQ0FBaUIsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNsRSxJQUFNLEtBQUssR0FBRyxRQUFRLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQy9DLE9BQU8sS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0I7YUFBTTtZQUNOLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ2xELE9BQU8sS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0I7SUFDRixDQUFDO0lBRVksbUNBQVMsR0FBdEIsVUFBdUIsSUFBWSxFQUFFLElBQXNCLEVBQUUsRUFBWTs7OztnQkFDbEUsVUFBVSxHQUFHLFVBQUcsSUFBSSxDQUFDLE9BQU8scUJBQVcsa0JBQWtCLENBQzlELElBQUksQ0FDSixjQUFJLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxjQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFFLENBQUM7Z0JBQzFELHNCQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFVBQVUsQ0FBQyxFQUFFO3dCQUN0RCxZQUFZLEVBQUUsTUFBTTt3QkFDcEIsTUFBTSxFQUFFLEtBQUs7d0JBQ2IsT0FBTyxhQUNOLFlBQVksRUFDWCw4RUFBOEUsRUFDL0UsTUFBTSxFQUFFLEtBQUssRUFDYixpQkFBaUIsRUFBRSxnQkFBZ0IsRUFDbkMsZ0JBQWdCLEVBQUUsT0FBTyxFQUN6QixnQkFBZ0IsRUFBRSxNQUFNLEVBQ3hCLGdCQUFnQixFQUFFLGFBQWEsRUFDL0IsY0FBYyxFQUFFLG1DQUFtQyxJQUNoRCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FDdkI7cUJBQ0QsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQUc7d0JBQ1gsSUFDQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLEtBQUssUUFBUTs0QkFDNUIsR0FBRyxDQUFDLElBQUksS0FBSyxJQUFJOzRCQUNqQixPQUFRLEdBQUcsQ0FBQyxJQUFZLENBQUMsV0FBVyxLQUFLLFFBQVEsRUFDaEQ7NEJBQ0QsTUFBTSxJQUFJLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO3lCQUN2Qzt3QkFFRCxPQUFRLEdBQUcsQ0FBQyxJQUFZLENBQUMsV0FBcUIsQ0FBQztvQkFDaEQsQ0FBQyxDQUFDLEVBQUM7OztLQUNIO0lBRVksd0NBQWMsR0FBM0IsVUFBNEIsS0FBZSxFQUFFLElBQXNCLEVBQUUsRUFBWTs7OztnQkFDaEYsc0JBQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSSxJQUFLLE9BQUEsS0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUE5QixDQUE4QixDQUFDLENBQUMsRUFBQzs7O0tBQ3hFO0lBbEZzQiw4QkFBYyxHQUFHLGlCQUFpQixDQUFDO0lBRTVDLDZCQUFhLEdBQUcsY0FBTSxPQUFBLEtBQUssRUFBTCxDQUFLLENBQUM7SUFFNUIsbUNBQW1CLEdBQUcsY0FBTSxPQUFBLElBQUksRUFBSixDQUFJLENBQUM7SUErRWhELHNCQUFDO0NBcEZELEFBb0ZDLENBcEZvQyxjQUFjLEdBb0ZsRDtTQXBGWSxlQUFlIiwiZmlsZSI6InRyYW5zbGF0b3JzL3Vuc3RhYmxlL0xpbmd2YVRyYW5zbGF0ZS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxhbmdDb2RlLCBsYW5nQ29kZVdpdGhBdXRvIH0gZnJvbSAnLi4vLi4vVHJhbnNsYXRvcic7XG5pbXBvcnQgeyBCYXNlVHJhbnNsYXRvciwgVHJhbnNsYXRvck9wdGlvbnMgfSBmcm9tICcuLi8uLi9CYXNlVHJhbnNsYXRvcic7XG5cbi8vIEZJWE1FOiB0cmFuc2xhdG9yIGZhaWxzIHRoZSB0ZXN0IGBUcmFuc2xhdGUgbWFueSB0ZXh0cyB3aXRoIFwidHJhbnNsYXRlQmF0Y2hcImAgLSBmaXggaXQgb3IgcmVtb3ZlIHRoaXMgdHJhbnNsYXRvclxuZXhwb3J0IGNsYXNzIExpbmd2YVRyYW5zbGF0ZSBleHRlbmRzIEJhc2VUcmFuc2xhdG9yIHtcblx0cHVibGljIHN0YXRpYyByZWFkb25seSB0cmFuc2xhdG9yTmFtZSA9ICdMaW5ndmFUcmFuc2xhdGUnO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNSZXF1aXJlZEtleSA9ICgpID0+IGZhbHNlO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNTdXBwb3J0ZWRBdXRvRnJvbSA9ICgpID0+IHRydWU7XG5cblx0cHVibGljIHN0YXRpYyBnZXRTdXBwb3J0ZWRMYW5ndWFnZXMoKTogbGFuZ0NvZGVbXSB7XG5cdFx0Ly8gZXNsaW50LWRpc2FibGVcblx0XHQvLyBwcmV0dGllci1pZ25vcmVcblx0XHRyZXR1cm4gW1xuXHRcdFx0XCJlblwiLCBcImFyXCIsIFwiYXpcIiwgXCJ6aFwiLCBcImNzXCIsXG5cdFx0XHRcIm5sXCIsIFwiZW9cIiwgXCJmaVwiLCBcImZyXCIsIFwiZGVcIixcblx0XHRcdFwiZWxcIiwgXCJoaVwiLCBcImh1XCIsIFwiaWRcIiwgXCJnYVwiLFxuXHRcdFx0XCJpdFwiLCBcImphXCIsIFwia29cIiwgXCJmYVwiLCBcInBsXCIsXG5cdFx0XHRcInB0XCIsIFwicnVcIiwgXCJza1wiLCBcImVzXCIsIFwic3ZcIixcblx0XHRcdFwidHJcIiwgXCJ1a1wiLCBcInZpXCJcblx0XHRdO1xuXHRcdC8vIGVzbGludC1lbmFibGVcblx0fVxuXG5cdC8vIFVSTCBvZiB5b3VyIGluc3RhbmNlLCBsb29rIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS90aGVkYXZpZGRlbHRhL2xpbmd2YS10cmFuc2xhdGUjaW5zdGFuY2VzXG5cdC8vIGZvciBsb2NhbCBpbnN0YW5jZSB1c2UgVVJMIFwiaHR0cDovL2xvY2FsaG9zdDozMDAwXCJcblx0cHJpdmF0ZSByZWFkb25seSBhcGlIb3N0O1xuXG5cdGNvbnN0cnVjdG9yKG9wdGlvbnM6IFRyYW5zbGF0b3JPcHRpb25zKSB7XG5cdFx0c3VwZXIob3B0aW9ucyk7XG5cblx0XHR0aGlzLmFwaUhvc3QgPSBvcHRpb25zLmFwaUhvc3QgPz8gJ2h0dHBzOi8vdHJhbnNsYXRlLnBsYXVzaWJpbGl0eS5jbG91ZCc7XG5cdH1cblxuXHRwdWJsaWMgZ2V0TGVuZ3RoTGltaXQoKSB7XG5cdFx0cmV0dXJuIDUwMDA7XG5cdH1cblxuXHRwdWJsaWMgZ2V0UmVxdWVzdHNUaW1lb3V0KCkge1xuXHRcdHJldHVybiAzMDA7XG5cdH1cblxuXHRwdWJsaWMgY2hlY2tMaW1pdEV4Y2VlZGluZyh0ZXh0OiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuXHRcdGlmIChBcnJheS5pc0FycmF5KHRleHQpKSB7XG5cdFx0XHRjb25zdCBhcnJheUxlbiA9IHRleHQucmVkdWNlKChhY2MsIHRleHQpID0+IGFjYyArIHRleHQubGVuZ3RoLCAwKTtcblx0XHRcdGNvbnN0IGV4dHJhID0gYXJyYXlMZW4gLSB0aGlzLmdldExlbmd0aExpbWl0KCk7XG5cdFx0XHRyZXR1cm4gZXh0cmEgPiAwID8gZXh0cmEgOiAwO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb25zdCBleHRyYSA9IHRleHQubGVuZ3RoIC0gdGhpcy5nZXRMZW5ndGhMaW1pdCgpO1xuXHRcdFx0cmV0dXJuIGV4dHJhID4gMCA/IGV4dHJhIDogMDtcblx0XHR9XG5cdH1cblxuXHRwdWJsaWMgYXN5bmMgdHJhbnNsYXRlKHRleHQ6IHN0cmluZywgZnJvbTogbGFuZ0NvZGVXaXRoQXV0bywgdG86IGxhbmdDb2RlKSB7XG5cdFx0Y29uc3QgcmVxdWVzdFVybCA9IGAke3RoaXMuYXBpSG9zdH0vYXBpL3YxLyR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuXHRcdFx0ZnJvbSxcblx0XHQpfS8ke2VuY29kZVVSSUNvbXBvbmVudCh0byl9LyR7ZW5jb2RlVVJJQ29tcG9uZW50KHRleHQpfWA7XG5cdFx0cmV0dXJuIHRoaXMuZmV0Y2godGhpcy53cmFwVXJsVG9Db3JzUHJveHkocmVxdWVzdFVybCksIHtcblx0XHRcdHJlc3BvbnNlVHlwZTogJ2pzb24nLFxuXHRcdFx0bWV0aG9kOiAnR0VUJyxcblx0XHRcdGhlYWRlcnM6IHtcblx0XHRcdFx0J1VzZXItQWdlbnQnOlxuXHRcdFx0XHRcdCdNb3ppbGxhLzUuMCAoWDExOyBVYnVudHU7IExpbnV4IHg4Nl82NDsgcnY6OTkuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC85OS4wJyxcblx0XHRcdFx0QWNjZXB0OiAnKi8qJyxcblx0XHRcdFx0J0FjY2VwdC1MYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuNScsXG5cdFx0XHRcdCdTZWMtRmV0Y2gtRGVzdCc6ICdlbXB0eScsXG5cdFx0XHRcdCdTZWMtRmV0Y2gtTW9kZSc6ICdjb3JzJyxcblx0XHRcdFx0J1NlYy1GZXRjaC1TaXRlJzogJ3NhbWUtb3JpZ2luJyxcblx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxuXHRcdFx0XHQuLi50aGlzLm9wdGlvbnMuaGVhZGVycyxcblx0XHRcdH0sXG5cdFx0fSkudGhlbigocnNwKSA9PiB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdHR5cGVvZiByc3AuZGF0YSAhPT0gJ29iamVjdCcgfHxcblx0XHRcdFx0cnNwLmRhdGEgPT09IG51bGwgfHxcblx0XHRcdFx0dHlwZW9mIChyc3AuZGF0YSBhcyBhbnkpLnRyYW5zbGF0aW9uICE9PSAnc3RyaW5nJ1xuXHRcdFx0KSB7XG5cdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1VuZXhwZWN0ZWQgZGF0YScpO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKHJzcC5kYXRhIGFzIGFueSkudHJhbnNsYXRpb24gYXMgc3RyaW5nO1xuXHRcdH0pO1xuXHR9XG5cblx0cHVibGljIGFzeW5jIHRyYW5zbGF0ZUJhdGNoKHRleHRzOiBzdHJpbmdbXSwgZnJvbTogbGFuZ0NvZGVXaXRoQXV0bywgdG86IGxhbmdDb2RlKSB7XG5cdFx0cmV0dXJuIFByb21pc2UuYWxsKHRleHRzLm1hcCgodGV4dCkgPT4gdGhpcy50cmFuc2xhdGUodGV4dCwgZnJvbSwgdG8pKSk7XG5cdH1cbn1cbiJdfQ==
