import { bufferToArrayBuffer } from '../../utils/buffers';
import { basicFetcher } from '../../utils/Fetcher/basicFetcher';
var GoogleTTS = /** @class */ (function () {
    function GoogleTTS(_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.fetcher, fetcher = _c === void 0 ? basicFetcher : _c;
        this.fetcher = fetcher;
    }
    GoogleTTS.prototype.getAudioBuffer = function (text, language) {
        var url = "https://translate.google.com/translate_tts?ie=UTF-8&tl=".concat(language, "&client=dict-chrome-ex&ttsspeed=0.5&q=") +
            encodeURIComponent(text);
        return this.fetcher(url, { responseType: 'arrayBuffer', method: 'GET' }).then(function (_a) {
            var data = _a.data;
            var buffer;
            if (typeof Buffer !== 'undefined' && data instanceof Buffer) {
                buffer = bufferToArrayBuffer(data);
            }
            else if (data instanceof ArrayBuffer) {
                buffer = data;
            }
            else {
                throw new TypeError('Unexpected response');
            }
            return {
                type: 'audio/mpeg',
                buffer: buffer,
            };
        });
    };
    GoogleTTS.getSupportedLanguages = function () {
        // prettier-ignore
        return [
            "af", "sq", "am", "ar", "hy", "as", "ay", "az", "bm", "eu",
            "be", "bn", "bho", "bs", "bg", "ca", "ceb", "ny", "zh", "zh_HANT",
            "co", "hr", "cs", "da", "dv", "doi", "nl", "en", "eo", "et", "ee",
            "tl", "fi", "fr", "fy", "gl", "ka", "de", "el", "gn", "gu", "ht",
            "ha", "haw", "iw", "hi", "hmn", "hu", "is", "ig", "ilo", "id",
            "ga", "it", "ja", "jw", "kn", "kk", "km", "rw", "gom", "ko",
            "kri", "ku", "ckb", "ky", "lo", "la", "lv", "ln", "lt", "lg",
            "lb", "mk", "mai", "mg", "ms", "ml", "mt", "mi", "mr", "mni-Mtei",
            "lus", "mn", "my", "ne", "no", "or", "om", "ps", "fa", "pl",
            "pt", "pa", "qu", "ro", "ru", "sm", "sa", "gd", "nso", "sr",
            "st", "sn", "sd", "si", "sk", "sl", "so", "es", "su", "sw", "sv",
            "tg", "ta", "tt", "te", "th", "ti", "ts", "tr", "tk", "ak", "uk", "ur",
            "ug", "uz", "vi", "cy", "xh", "yi", "yo", "zu"
        ];
    };
    return GoogleTTS;
}());
export { GoogleTTS };

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR0cy9Hb29nbGVUVFMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBR2hFO0lBRUMsbUJBQVksRUFBc0Q7WUFBdEQscUJBQW9ELEVBQUUsS0FBQSxFQUFwRCxlQUFzQixFQUF0QixPQUFPLG1CQUFHLFlBQVksS0FBQTtRQUNuQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBRU0sa0NBQWMsR0FBckIsVUFBc0IsSUFBWSxFQUFFLFFBQWdCO1FBQ25ELElBQU0sR0FBRyxHQUNSLGlFQUEwRCxRQUFRLDJDQUF3QztZQUMxRyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUUxQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQzVFLFVBQUMsRUFBUTtnQkFBTixJQUFJLFVBQUE7WUFDTixJQUFJLE1BQW1CLENBQUM7WUFDeEIsSUFBSSxPQUFPLE1BQU0sS0FBSyxXQUFXLElBQUksSUFBSSxZQUFZLE1BQU0sRUFBRTtnQkFDNUQsTUFBTSxHQUFHLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ25DO2lCQUFNLElBQUksSUFBSSxZQUFZLFdBQVcsRUFBRTtnQkFDdkMsTUFBTSxHQUFHLElBQUksQ0FBQzthQUNkO2lCQUFNO2dCQUNOLE1BQU0sSUFBSSxTQUFTLENBQUMscUJBQXFCLENBQUMsQ0FBQzthQUMzQztZQUVELE9BQU87Z0JBQ04sSUFBSSxFQUFFLFlBQVk7Z0JBQ2xCLE1BQU0sUUFBQTthQUNOLENBQUM7UUFDSCxDQUFDLENBQ0QsQ0FBQztJQUNILENBQUM7SUFFYSwrQkFBcUIsR0FBbkM7UUFDQyxrQkFBa0I7UUFDbEIsT0FBTztZQUNOLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7WUFDMUQsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUztZQUNqRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUNqRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUNoRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJO1lBQzdELElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUk7WUFDM0QsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUM1RCxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxVQUFVO1lBQ2pFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7WUFDM0QsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSTtZQUMzRCxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSTtZQUNoRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7WUFDdEUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7U0FDOUMsQ0FBQztJQUNILENBQUM7SUFDRixnQkFBQztBQUFELENBaERBLEFBZ0RDLElBQUEiLCJmaWxlIjoidHRzL0dvb2dsZVRUUy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1ZmZlclRvQXJyYXlCdWZmZXIgfSBmcm9tICcuLi8uLi91dGlscy9idWZmZXJzJztcbmltcG9ydCB7IFRUU0F1ZGlvQnVmZmVyLCBUVFNQcm92aWRlclByb3BzIH0gZnJvbSAnLi4nO1xuaW1wb3J0IHsgYmFzaWNGZXRjaGVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvRmV0Y2hlci9iYXNpY0ZldGNoZXInO1xuaW1wb3J0IHsgRmV0Y2hlciB9IGZyb20gJy4uLy4uL3V0aWxzL0ZldGNoZXInO1xuXG5leHBvcnQgY2xhc3MgR29vZ2xlVFRTIGltcGxlbWVudHMgVFRTUHJvdmlkZXJQcm9wcyB7XG5cdHByaXZhdGUgcmVhZG9ubHkgZmV0Y2hlcjtcblx0Y29uc3RydWN0b3IoeyBmZXRjaGVyID0gYmFzaWNGZXRjaGVyIH06IHsgZmV0Y2hlcj86IEZldGNoZXIgfSA9IHt9KSB7XG5cdFx0dGhpcy5mZXRjaGVyID0gZmV0Y2hlcjtcblx0fVxuXG5cdHB1YmxpYyBnZXRBdWRpb0J1ZmZlcih0ZXh0OiBzdHJpbmcsIGxhbmd1YWdlOiBzdHJpbmcpOiBQcm9taXNlPFRUU0F1ZGlvQnVmZmVyPiB7XG5cdFx0Y29uc3QgdXJsID1cblx0XHRcdGBodHRwczovL3RyYW5zbGF0ZS5nb29nbGUuY29tL3RyYW5zbGF0ZV90dHM/aWU9VVRGLTgmdGw9JHtsYW5ndWFnZX0mY2xpZW50PWRpY3QtY2hyb21lLWV4JnR0c3NwZWVkPTAuNSZxPWAgK1xuXHRcdFx0ZW5jb2RlVVJJQ29tcG9uZW50KHRleHQpO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmV0Y2hlcih1cmwsIHsgcmVzcG9uc2VUeXBlOiAnYXJyYXlCdWZmZXInLCBtZXRob2Q6ICdHRVQnIH0pLnRoZW4oXG5cdFx0XHQoeyBkYXRhIH0pID0+IHtcblx0XHRcdFx0bGV0IGJ1ZmZlcjogQXJyYXlCdWZmZXI7XG5cdFx0XHRcdGlmICh0eXBlb2YgQnVmZmVyICE9PSAndW5kZWZpbmVkJyAmJiBkYXRhIGluc3RhbmNlb2YgQnVmZmVyKSB7XG5cdFx0XHRcdFx0YnVmZmVyID0gYnVmZmVyVG9BcnJheUJ1ZmZlcihkYXRhKTtcblx0XHRcdFx0fSBlbHNlIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcblx0XHRcdFx0XHRidWZmZXIgPSBkYXRhO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1VuZXhwZWN0ZWQgcmVzcG9uc2UnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogJ2F1ZGlvL21wZWcnLFxuXHRcdFx0XHRcdGJ1ZmZlcixcblx0XHRcdFx0fTtcblx0XHRcdH0sXG5cdFx0KTtcblx0fVxuXG5cdHB1YmxpYyBzdGF0aWMgZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzKCkge1xuXHRcdC8vIHByZXR0aWVyLWlnbm9yZVxuXHRcdHJldHVybiBbXG5cdFx0XHRcImFmXCIsIFwic3FcIiwgXCJhbVwiLCBcImFyXCIsIFwiaHlcIiwgXCJhc1wiLCBcImF5XCIsIFwiYXpcIiwgXCJibVwiLCBcImV1XCIsXG5cdFx0XHRcImJlXCIsIFwiYm5cIiwgXCJiaG9cIiwgXCJic1wiLCBcImJnXCIsIFwiY2FcIiwgXCJjZWJcIiwgXCJueVwiLCBcInpoXCIsIFwiemhfSEFOVFwiLFxuXHRcdFx0XCJjb1wiLCBcImhyXCIsIFwiY3NcIiwgXCJkYVwiLCBcImR2XCIsIFwiZG9pXCIsIFwibmxcIiwgXCJlblwiLCBcImVvXCIsIFwiZXRcIiwgXCJlZVwiLFxuXHRcdFx0XCJ0bFwiLCBcImZpXCIsIFwiZnJcIiwgXCJmeVwiLCBcImdsXCIsIFwia2FcIiwgXCJkZVwiLCBcImVsXCIsIFwiZ25cIiwgXCJndVwiLCBcImh0XCIsXG5cdFx0XHRcImhhXCIsIFwiaGF3XCIsIFwiaXdcIiwgXCJoaVwiLCBcImhtblwiLCBcImh1XCIsIFwiaXNcIiwgXCJpZ1wiLCBcImlsb1wiLCBcImlkXCIsXG5cdFx0XHRcImdhXCIsIFwiaXRcIiwgXCJqYVwiLCBcImp3XCIsIFwia25cIiwgXCJra1wiLCBcImttXCIsIFwicndcIiwgXCJnb21cIiwgXCJrb1wiLFxuXHRcdFx0XCJrcmlcIiwgXCJrdVwiLCBcImNrYlwiLCBcImt5XCIsIFwibG9cIiwgXCJsYVwiLCBcImx2XCIsIFwibG5cIiwgXCJsdFwiLCBcImxnXCIsXG5cdFx0XHRcImxiXCIsIFwibWtcIiwgXCJtYWlcIiwgXCJtZ1wiLCBcIm1zXCIsIFwibWxcIiwgXCJtdFwiLCBcIm1pXCIsIFwibXJcIiwgXCJtbmktTXRlaVwiLFxuXHRcdFx0XCJsdXNcIiwgXCJtblwiLCBcIm15XCIsIFwibmVcIiwgXCJub1wiLCBcIm9yXCIsIFwib21cIiwgXCJwc1wiLCBcImZhXCIsIFwicGxcIixcblx0XHRcdFwicHRcIiwgXCJwYVwiLCBcInF1XCIsIFwicm9cIiwgXCJydVwiLCBcInNtXCIsIFwic2FcIiwgXCJnZFwiLCBcIm5zb1wiLCBcInNyXCIsXG5cdFx0XHRcInN0XCIsIFwic25cIiwgXCJzZFwiLCBcInNpXCIsIFwic2tcIiwgXCJzbFwiLCBcInNvXCIsIFwiZXNcIiwgXCJzdVwiLCBcInN3XCIsIFwic3ZcIixcblx0XHRcdFwidGdcIiwgXCJ0YVwiLCBcInR0XCIsIFwidGVcIiwgXCJ0aFwiLCBcInRpXCIsIFwidHNcIiwgXCJ0clwiLCBcInRrXCIsIFwiYWtcIiwgXCJ1a1wiLCBcInVyXCIsXG5cdFx0XHRcInVnXCIsIFwidXpcIiwgXCJ2aVwiLCBcImN5XCIsIFwieGhcIiwgXCJ5aVwiLCBcInlvXCIsIFwienVcIlxuXHRcdF07XG5cdH1cbn1cbiJdfQ==
