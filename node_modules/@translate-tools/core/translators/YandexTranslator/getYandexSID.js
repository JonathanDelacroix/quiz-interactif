"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getYandexSID = getYandexSID;
// Source: https://github.com/FilipePS/Traduzir-paginas-web/blob/f3a4956a1aa96b7a9124864158a5200827694521/background/translationService.js
var lastYandexRequestSIDTime = null;
var yandexTranslateSID = null;
var yandexSIDNotFound = false;
function getYandexSID(fetcher) {
  return new Promise(function (resolve) {
    var updateYandexSid = false;
    if (lastYandexRequestSIDTime) {
      var date = new Date();
      if (yandexTranslateSID) {
        date.setHours(date.getHours() - 12);
      } else if (yandexSIDNotFound) {
        date.setMinutes(date.getMinutes() - 30);
      } else {
        date.setMinutes(date.getMinutes() - 2);
      }
      if (date.getTime() > lastYandexRequestSIDTime) {
        updateYandexSid = true;
      }
    } else {
      updateYandexSid = true;
    }
    if (updateYandexSid) {
      lastYandexRequestSIDTime = Date.now();
      var url = 'https://translate.yandex.net/website-widget/v1/widget.js?widgetId=ytWidget&pageLang=es&widgetTheme=light&autoMode=false';
      fetcher(url, {
        responseType: 'text'
      }).then(function (response) {
        var result = (typeof response.data === 'string' ? response.data : '').match(/sid\:\s\'[0-9a-f\.]+/);
        if (result && result[0] && result[0].length > 7) {
          yandexTranslateSID = result[0].substring(6);
          yandexSIDNotFound = false;
        } else {
          yandexSIDNotFound = true;
        }
        resolve();
      }).catch(function (error) {
        console.error(error);
        resolve();
      });
    } else {
      resolve();
    }
  }).then(function () {
    return yandexTranslateSID;
  });
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRvcnMvWWFuZGV4VHJhbnNsYXRvci9nZXRZYW5kZXhTSUQuanMiLCJuYW1lcyI6WyJsYXN0WWFuZGV4UmVxdWVzdFNJRFRpbWUiLCJ5YW5kZXhUcmFuc2xhdGVTSUQiLCJ5YW5kZXhTSUROb3RGb3VuZCIsImdldFlhbmRleFNJRCIsImZldGNoZXIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInVwZGF0ZVlhbmRleFNpZCIsImRhdGUiLCJEYXRlIiwic2V0SG91cnMiLCJnZXRIb3VycyIsInNldE1pbnV0ZXMiLCJnZXRNaW51dGVzIiwiZ2V0VGltZSIsIm5vdyIsInVybCIsInJlc3BvbnNlVHlwZSIsInRoZW4iLCJyZXNwb25zZSIsInJlc3VsdCIsImRhdGEiLCJtYXRjaCIsImxlbmd0aCIsInN1YnN0cmluZyIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZXMiOlsidHJhbnNsYXRvcnMvWWFuZGV4VHJhbnNsYXRvci9nZXRZYW5kZXhTSUQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vRmlsaXBlUFMvVHJhZHV6aXItcGFnaW5hcy13ZWIvYmxvYi9mM2E0OTU2YTFhYTk2YjdhOTEyNDg2NDE1OGE1MjAwODI3Njk0NTIxL2JhY2tncm91bmQvdHJhbnNsYXRpb25TZXJ2aWNlLmpzXG5cbmltcG9ydCB7IEZldGNoZXIgfSBmcm9tICcuLi8uLi91dGlscy9GZXRjaGVyJztcblxubGV0IGxhc3RZYW5kZXhSZXF1ZXN0U0lEVGltZTogbnVtYmVyIHwgbnVsbCA9IG51bGw7XG5sZXQgeWFuZGV4VHJhbnNsYXRlU0lEOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbmxldCB5YW5kZXhTSUROb3RGb3VuZDogYm9vbGVhbiA9IGZhbHNlO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0WWFuZGV4U0lEKGZldGNoZXI6IEZldGNoZXIpIHtcblx0cmV0dXJuIG5ldyBQcm9taXNlPHZvaWQ+KChyZXNvbHZlKSA9PiB7XG5cdFx0bGV0IHVwZGF0ZVlhbmRleFNpZCA9IGZhbHNlO1xuXHRcdGlmIChsYXN0WWFuZGV4UmVxdWVzdFNJRFRpbWUpIHtcblx0XHRcdGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpO1xuXHRcdFx0aWYgKHlhbmRleFRyYW5zbGF0ZVNJRCkge1xuXHRcdFx0XHRkYXRlLnNldEhvdXJzKGRhdGUuZ2V0SG91cnMoKSAtIDEyKTtcblx0XHRcdH0gZWxzZSBpZiAoeWFuZGV4U0lETm90Rm91bmQpIHtcblx0XHRcdFx0ZGF0ZS5zZXRNaW51dGVzKGRhdGUuZ2V0TWludXRlcygpIC0gMzApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0ZS5zZXRNaW51dGVzKGRhdGUuZ2V0TWludXRlcygpIC0gMik7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZGF0ZS5nZXRUaW1lKCkgPiBsYXN0WWFuZGV4UmVxdWVzdFNJRFRpbWUpIHtcblx0XHRcdFx0dXBkYXRlWWFuZGV4U2lkID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dXBkYXRlWWFuZGV4U2lkID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAodXBkYXRlWWFuZGV4U2lkKSB7XG5cdFx0XHRsYXN0WWFuZGV4UmVxdWVzdFNJRFRpbWUgPSBEYXRlLm5vdygpO1xuXHRcdFx0Y29uc3QgdXJsID1cblx0XHRcdFx0J2h0dHBzOi8vdHJhbnNsYXRlLnlhbmRleC5uZXQvd2Vic2l0ZS13aWRnZXQvdjEvd2lkZ2V0LmpzP3dpZGdldElkPXl0V2lkZ2V0JnBhZ2VMYW5nPWVzJndpZGdldFRoZW1lPWxpZ2h0JmF1dG9Nb2RlPWZhbHNlJztcblxuXHRcdFx0ZmV0Y2hlcih1cmwsIHsgcmVzcG9uc2VUeXBlOiAndGV4dCcgfSlcblx0XHRcdFx0LnRoZW4oKHJlc3BvbnNlKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgcmVzdWx0ID0gKFxuXHRcdFx0XHRcdFx0dHlwZW9mIHJlc3BvbnNlLmRhdGEgPT09ICdzdHJpbmcnID8gcmVzcG9uc2UuZGF0YSA6ICcnXG5cdFx0XHRcdFx0KS5tYXRjaCgvc2lkXFw6XFxzXFwnWzAtOWEtZlxcLl0rLyk7XG5cblx0XHRcdFx0XHRpZiAocmVzdWx0ICYmIHJlc3VsdFswXSAmJiByZXN1bHRbMF0ubGVuZ3RoID4gNykge1xuXHRcdFx0XHRcdFx0eWFuZGV4VHJhbnNsYXRlU0lEID0gcmVzdWx0WzBdLnN1YnN0cmluZyg2KTtcblx0XHRcdFx0XHRcdHlhbmRleFNJRE5vdEZvdW5kID0gZmFsc2U7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHlhbmRleFNJRE5vdEZvdW5kID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXNvbHZlKCk7XG5cdFx0XHRcdH0pXG5cdFx0XHRcdC5jYXRjaCgoZXJyb3IpID0+IHtcblx0XHRcdFx0XHRjb25zb2xlLmVycm9yKGVycm9yKTtcblx0XHRcdFx0XHRyZXNvbHZlKCk7XG5cdFx0XHRcdH0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZXNvbHZlKCk7XG5cdFx0fVxuXHR9KS50aGVuKCgpID0+IHlhbmRleFRyYW5zbGF0ZVNJRCk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBSUEsSUFBSUEsd0JBQXdCLEdBQWtCLElBQUk7QUFDbEQsSUFBSUMsa0JBQWtCLEdBQWtCLElBQUk7QUFDNUMsSUFBSUMsaUJBQWlCLEdBQVksS0FBSztBQUVoQyxTQUFVQyxZQUFZQSxDQUFDQyxPQUFnQjtFQUM1QyxPQUFPLElBQUlDLE9BQU8sQ0FBTyxVQUFDQyxPQUFPO0lBQ2hDLElBQUlDLGVBQWUsR0FBRyxLQUFLO0lBQzNCLElBQUlQLHdCQUF3QixFQUFFO01BQzdCLElBQU1RLElBQUksR0FBRyxJQUFJQyxJQUFJLEVBQUU7TUFDdkIsSUFBSVIsa0JBQWtCLEVBQUU7UUFDdkJPLElBQUksQ0FBQ0UsUUFBUSxDQUFDRixJQUFJLENBQUNHLFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQztPQUNuQyxNQUFNLElBQUlULGlCQUFpQixFQUFFO1FBQzdCTSxJQUFJLENBQUNJLFVBQVUsQ0FBQ0osSUFBSSxDQUFDSyxVQUFVLEVBQUUsR0FBRyxFQUFFLENBQUM7T0FDdkMsTUFBTTtRQUNOTCxJQUFJLENBQUNJLFVBQVUsQ0FBQ0osSUFBSSxDQUFDSyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7O01BRXZDLElBQUlMLElBQUksQ0FBQ00sT0FBTyxFQUFFLEdBQUdkLHdCQUF3QixFQUFFO1FBQzlDTyxlQUFlLEdBQUcsSUFBSTs7S0FFdkIsTUFBTTtNQUNOQSxlQUFlLEdBQUcsSUFBSTs7SUFHdkIsSUFBSUEsZUFBZSxFQUFFO01BQ3BCUCx3QkFBd0IsR0FBR1MsSUFBSSxDQUFDTSxHQUFHLEVBQUU7TUFDckMsSUFBTUMsR0FBRyxHQUNSLHlIQUF5SDtNQUUxSFosT0FBTyxDQUFDWSxHQUFHLEVBQUU7UUFBRUMsWUFBWSxFQUFFO01BQU0sQ0FBRSxDQUFDLENBQ3BDQyxJQUFJLENBQUMsVUFBQ0MsUUFBUTtRQUNkLElBQU1DLE1BQU0sR0FBRyxDQUNkLE9BQU9ELFFBQVEsQ0FBQ0UsSUFBSSxLQUFLLFFBQVEsR0FBR0YsUUFBUSxDQUFDRSxJQUFJLEdBQUcsRUFBRSxFQUNyREMsS0FBSyxDQUFDLHNCQUFzQixDQUFDO1FBRS9CLElBQUlGLE1BQU0sSUFBSUEsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJQSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUNHLE1BQU0sR0FBRyxDQUFDLEVBQUU7VUFDaER0QixrQkFBa0IsR0FBR21CLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQ0ksU0FBUyxDQUFDLENBQUMsQ0FBQztVQUMzQ3RCLGlCQUFpQixHQUFHLEtBQUs7U0FDekIsTUFBTTtVQUNOQSxpQkFBaUIsR0FBRyxJQUFJOztRQUd6QkksT0FBTyxFQUFFO01BQ1YsQ0FBQyxDQUFDLENBQ0RtQixLQUFLLENBQUMsVUFBQ0MsS0FBSztRQUNaQyxPQUFPLENBQUNELEtBQUssQ0FBQ0EsS0FBSyxDQUFDO1FBQ3BCcEIsT0FBTyxFQUFFO01BQ1YsQ0FBQyxDQUFDO0tBQ0gsTUFBTTtNQUNOQSxPQUFPLEVBQUU7O0VBRVgsQ0FBQyxDQUFDLENBQUNZLElBQUksQ0FBQztJQUFNLE9BQUFqQixrQkFBa0I7RUFBbEIsQ0FBa0IsQ0FBQztBQUNsQyIsImlnbm9yZUxpc3QiOltdfQ==
