"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isLanguageCodeISO639v2 = exports.isLanguageCodeISO639v1 = exports.getLanguageCodesISO639 = void 0;
var _ISO639LangCodesList = _interopRequireDefault(require("./ISO639LangCodesList"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var __values = void 0 && (void 0).__values || function (o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
    m = s && o[s],
    i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
/**
 * Check is string are 639-1 lang code
 *
 * Values are case sensitive, if you need, you have to convert strings to lower case to check
 */
var isLanguageCodeISO639v1 = function (code) {
  return Boolean(code && _ISO639LangCodesList.default.some(function (lang) {
    return code === lang.v1;
  }));
};
/**
 * Check is string are 639-2 lang code
 *
 * Values are case sensitive, if you need, you have to convert strings to lower case to check
 */
exports.isLanguageCodeISO639v1 = isLanguageCodeISO639v1;
var isLanguageCodeISO639v2 = function (code) {
  return Boolean(code && _ISO639LangCodesList.default.some(function (lang) {
    return code === lang.v2 || code === lang.v2B || code === lang.v2T;
  }));
};
/**
 * Return subset of ISO-639 lang codes
 */
exports.isLanguageCodeISO639v2 = isLanguageCodeISO639v2;
var getLanguageCodesISO639 = function (set) {
  var e_1, _a;
  var pickedLanguages = [];
  try {
    for (var languages_1 = __values(_ISO639LangCodesList.default), languages_1_1 = languages_1.next(); !languages_1_1.done; languages_1_1 = languages_1.next()) {
      var lang = languages_1_1.value;
      switch (set) {
        case 'v1':
          if (lang.v1) {
            pickedLanguages.push(lang.v1);
          }
          break;
        case 'v2':
          pickedLanguages.push(lang.v2);
          break;
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (languages_1_1 && !languages_1_1.done && (_a = languages_1.return)) _a.call(languages_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
  return pickedLanguages;
};
exports.getLanguageCodesISO639 = getLanguageCodesISO639;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2VzL2luZGV4LmpzIiwibmFtZXMiOlsiX0lTTzYzOUxhbmdDb2Rlc0xpc3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImUiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImlzTGFuZ3VhZ2VDb2RlSVNPNjM5djEiLCJjb2RlIiwiQm9vbGVhbiIsImxhbmd1YWdlcyIsInNvbWUiLCJsYW5nIiwidjEiLCJleHBvcnRzIiwiaXNMYW5ndWFnZUNvZGVJU082Mzl2MiIsInYyIiwidjJCIiwidjJUIiwiZ2V0TGFuZ3VhZ2VDb2Rlc0lTTzYzOSIsInNldCIsInBpY2tlZExhbmd1YWdlcyIsImxhbmd1YWdlc18xIiwiX192YWx1ZXMiLCJsYW5ndWFnZXNfMV8xIiwibmV4dCIsImRvbmUiLCJ2YWx1ZSIsInB1c2giXSwic291cmNlcyI6WyJsYW5ndWFnZXMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxhbmd1YWdlcyBmcm9tICcuL0lTTzYzOUxhbmdDb2Rlc0xpc3QnO1xuXG4vKipcbiAqIENoZWNrIGlzIHN0cmluZyBhcmUgNjM5LTEgbGFuZyBjb2RlXG4gKlxuICogVmFsdWVzIGFyZSBjYXNlIHNlbnNpdGl2ZSwgaWYgeW91IG5lZWQsIHlvdSBoYXZlIHRvIGNvbnZlcnQgc3RyaW5ncyB0byBsb3dlciBjYXNlIHRvIGNoZWNrXG4gKi9cbmV4cG9ydCBjb25zdCBpc0xhbmd1YWdlQ29kZUlTTzYzOXYxID0gKGNvZGU6IHN0cmluZykgPT4ge1xuXHRyZXR1cm4gQm9vbGVhbihjb2RlICYmIGxhbmd1YWdlcy5zb21lKChsYW5nKSA9PiBjb2RlID09PSBsYW5nLnYxKSk7XG59O1xuXG4vKipcbiAqIENoZWNrIGlzIHN0cmluZyBhcmUgNjM5LTIgbGFuZyBjb2RlXG4gKlxuICogVmFsdWVzIGFyZSBjYXNlIHNlbnNpdGl2ZSwgaWYgeW91IG5lZWQsIHlvdSBoYXZlIHRvIGNvbnZlcnQgc3RyaW5ncyB0byBsb3dlciBjYXNlIHRvIGNoZWNrXG4gKi9cbmV4cG9ydCBjb25zdCBpc0xhbmd1YWdlQ29kZUlTTzYzOXYyID0gKGNvZGU6IHN0cmluZykgPT4ge1xuXHRyZXR1cm4gQm9vbGVhbihcblx0XHRjb2RlICYmXG5cdFx0XHRsYW5ndWFnZXMuc29tZShcblx0XHRcdFx0KGxhbmcpID0+IGNvZGUgPT09IGxhbmcudjIgfHwgY29kZSA9PT0gbGFuZy52MkIgfHwgY29kZSA9PT0gbGFuZy52MlQsXG5cdFx0XHQpLFxuXHQpO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gc3Vic2V0IG9mIElTTy02MzkgbGFuZyBjb2Rlc1xuICovXG5leHBvcnQgY29uc3QgZ2V0TGFuZ3VhZ2VDb2Rlc0lTTzYzOSA9IChzZXQ6ICd2MScgfCAndjInKSA9PiB7XG5cdGNvbnN0IHBpY2tlZExhbmd1YWdlczogc3RyaW5nW10gPSBbXTtcblx0Zm9yIChjb25zdCBsYW5nIG9mIGxhbmd1YWdlcykge1xuXHRcdHN3aXRjaCAoc2V0KSB7XG5cdFx0Y2FzZSAndjEnOlxuXHRcdFx0aWYgKGxhbmcudjEpIHtcblx0XHRcdFx0cGlja2VkTGFuZ3VhZ2VzLnB1c2gobGFuZy52MSk7XG5cdFx0XHR9XG5cdFx0XHRicmVhaztcblx0XHRjYXNlICd2Mic6XG5cdFx0XHRwaWNrZWRMYW5ndWFnZXMucHVzaChsYW5nLnYyKTtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBwaWNrZWRMYW5ndWFnZXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxvQkFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQThDLFNBQUFELHVCQUFBRSxDQUFBLFdBQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUEsS0FBQUUsT0FBQSxFQUFBRixDQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztBQUU5Qzs7Ozs7QUFLTyxJQUFNRyxzQkFBc0IsR0FBRyxTQUFBQSxDQUFDQyxJQUFZO0VBQ2xELE9BQU9DLE9BQU8sQ0FBQ0QsSUFBSSxJQUFJRSw0QkFBUyxDQUFDQyxJQUFJLENBQUMsVUFBQ0MsSUFBSTtJQUFLLE9BQUFKLElBQUksS0FBS0ksSUFBSSxDQUFDQyxFQUFFO0VBQWhCLENBQWdCLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBRUQ7Ozs7O0FBQUFDLE9BQUEsQ0FBQVAsc0JBQUEsR0FBQUEsc0JBQUE7QUFLTyxJQUFNUSxzQkFBc0IsR0FBRyxTQUFBQSxDQUFDUCxJQUFZO0VBQ2xELE9BQU9DLE9BQU8sQ0FDYkQsSUFBSSxJQUNIRSw0QkFBUyxDQUFDQyxJQUFJLENBQ2IsVUFBQ0MsSUFBSTtJQUFLLE9BQUFKLElBQUksS0FBS0ksSUFBSSxDQUFDSSxFQUFFLElBQUlSLElBQUksS0FBS0ksSUFBSSxDQUFDSyxHQUFHLElBQUlULElBQUksS0FBS0ksSUFBSSxDQUFDTSxHQUFHO0VBQTFELENBQTBELENBQ3BFLENBQ0Y7QUFDRixDQUFDO0FBRUQ7OztBQUFBSixPQUFBLENBQUFDLHNCQUFBLEdBQUFBLHNCQUFBO0FBR08sSUFBTUksc0JBQXNCLEdBQUcsU0FBQUEsQ0FBQ0MsR0FBZ0I7O0VBQ3RELElBQU1DLGVBQWUsR0FBYSxFQUFFOztJQUNwQyxLQUFtQixJQUFBQyxXQUFBLEdBQUFDLFFBQUEsQ0FBQWIsNEJBQVMsR0FBQWMsYUFBQSxHQUFBRixXQUFBLENBQUFHLElBQUEsS0FBQUQsYUFBQSxDQUFBRSxJQUFBLEVBQUFGLGFBQUEsR0FBQUYsV0FBQSxDQUFBRyxJQUFBLElBQUU7TUFBekIsSUFBTWIsSUFBSSxHQUFBWSxhQUFBLENBQUFHLEtBQUE7TUFDZCxRQUFRUCxHQUFHO1FBQ1gsS0FBSyxJQUFJO1VBQ1IsSUFBSVIsSUFBSSxDQUFDQyxFQUFFLEVBQUU7WUFDWlEsZUFBZSxDQUFDTyxJQUFJLENBQUNoQixJQUFJLENBQUNDLEVBQUUsQ0FBQzs7VUFFOUI7UUFDRCxLQUFLLElBQUk7VUFDUlEsZUFBZSxDQUFDTyxJQUFJLENBQUNoQixJQUFJLENBQUNJLEVBQUUsQ0FBQztVQUM3Qjs7Ozs7Ozs7Ozs7Ozs7RUFJRixPQUFPSyxlQUFlO0FBQ3ZCLENBQUM7QUFBQ1AsT0FBQSxDQUFBSyxzQkFBQSxHQUFBQSxzQkFBQSIsImlnbm9yZUxpc3QiOltdfQ==
