"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LingvaTTS = void 0;
var _basicFetcher = require("../../utils/Fetcher/basicFetcher");
var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function () {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
var LingvaTTS = exports.LingvaTTS = /** @class */function () {
  function LingvaTTS(_a) {
    var _b = _a === void 0 ? {} : _a,
      _c = _b.fetcher,
      fetcher = _c === void 0 ? _basicFetcher.basicFetcher : _c,
      apiHost = _b.apiHost;
    this.host = apiHost !== null && apiHost !== void 0 ? apiHost : 'https://translate.plausibility.cloud';
    this.fetcher = fetcher;
  }
  LingvaTTS.prototype.getAudioBuffer = function (text, language) {
    return __awaiter(this, void 0, void 0, function () {
      var url;
      return __generator(this, function (_a) {
        url = "".concat(this.host, "/api/v1/audio/").concat(encodeURIComponent(language), "/").concat(encodeURIComponent(text));
        return [2 /*return*/, this.fetcher(url, {
          responseType: 'json',
          method: 'GET'
        }).then(function (_a) {
          var json = _a.data;
          if (typeof json !== 'object' || json === null) {
            throw new TypeError('Unexpected response');
          }
          if (!('audio' in json) || !Array.isArray(json.audio)) {
            throw new TypeError('Unexpected response');
          }
          return {
            type: 'audio/mpeg',
            buffer: new Uint8Array(json.audio).buffer
          };
        })];
      });
    });
  };
  LingvaTTS.getSupportedLanguages = function () {
    // prettier-ignore
    return ["af", "sq", "am", "ar", "hy", "as", "ay", "az", "bm", "eu", "be", "bn", "bho", "bs", "bg", "ca", "ceb", "ny", "zh", "zh_HANT", "co", "hr", "cs", "da", "dv", "doi", "nl", "en", "eo", "et", "ee", "tl", "fi", "fr", "fy", "gl", "ka", "de", "el", "gn", "gu", "ht", "ha", "haw", "iw", "hi", "hmn", "hu", "is", "ig", "ilo", "id", "ga", "it", "ja", "jw", "kn", "kk", "km", "rw", "gom", "ko", "kri", "ku", "ckb", "ky", "lo", "la", "lv", "ln", "lt", "lg", "lb", "mk", "mai", "mg", "ms", "ml", "mt", "mi", "mr", "mni-Mtei", "lus", "mn", "my", "ne", "no", "or", "om", "ps", "fa", "pl", "pt", "pa", "qu", "ro", "ru", "sm", "sa", "gd", "nso", "sr", "st", "sn", "sd", "si", "sk", "sl", "so", "es", "su", "sw", "sv", "tg", "ta", "tt", "te", "th", "ti", "ts", "tr", "tk", "ak", "uk", "ur", "ug", "uz", "vi", "cy", "xh", "yi", "yo", "zu"];
  };
  return LingvaTTS;
}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHRzL0xpbmd2YVRUUy9pbmRleC5qcyIsIm5hbWVzIjpbIl9iYXNpY0ZldGNoZXIiLCJyZXF1aXJlIiwiTGluZ3ZhVFRTIiwiZXhwb3J0cyIsIl9hIiwiX2IiLCJfYyIsImZldGNoZXIiLCJiYXNpY0ZldGNoZXIiLCJhcGlIb3N0IiwiaG9zdCIsInByb3RvdHlwZSIsImdldEF1ZGlvQnVmZmVyIiwidGV4dCIsImxhbmd1YWdlIiwidXJsIiwiY29uY2F0IiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVzcG9uc2VUeXBlIiwibWV0aG9kIiwidGhlbiIsImpzb24iLCJkYXRhIiwiVHlwZUVycm9yIiwiQXJyYXkiLCJpc0FycmF5IiwiYXVkaW8iLCJ0eXBlIiwiYnVmZmVyIiwiVWludDhBcnJheSIsImdldFN1cHBvcnRlZExhbmd1YWdlcyJdLCJzb3VyY2VzIjpbInR0cy9MaW5ndmFUVFMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVFRTQXVkaW9CdWZmZXIsIFRUU1Byb3ZpZGVyUHJvcHMgfSBmcm9tICcuLic7XG5pbXBvcnQgeyBGZXRjaGVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvRmV0Y2hlcic7XG5pbXBvcnQgeyBiYXNpY0ZldGNoZXIgfSBmcm9tICcuLi8uLi91dGlscy9GZXRjaGVyL2Jhc2ljRmV0Y2hlcic7XG5cbmV4cG9ydCBjbGFzcyBMaW5ndmFUVFMgaW1wbGVtZW50cyBUVFNQcm92aWRlclByb3BzIHtcblx0cHJpdmF0ZSByZWFkb25seSBob3N0O1xuXHRwcml2YXRlIHJlYWRvbmx5IGZldGNoZXI7XG5cdGNvbnN0cnVjdG9yKHtcblx0XHRmZXRjaGVyID0gYmFzaWNGZXRjaGVyLFxuXHRcdGFwaUhvc3QsXG5cdH06IHsgZmV0Y2hlcj86IEZldGNoZXI7IGFwaUhvc3Q/OiBzdHJpbmcgfSA9IHt9KSB7XG5cdFx0dGhpcy5ob3N0ID0gYXBpSG9zdCA/PyAnaHR0cHM6Ly90cmFuc2xhdGUucGxhdXNpYmlsaXR5LmNsb3VkJztcblx0XHR0aGlzLmZldGNoZXIgPSBmZXRjaGVyO1xuXHR9XG5cblx0cHVibGljIGFzeW5jIGdldEF1ZGlvQnVmZmVyKHRleHQ6IHN0cmluZywgbGFuZ3VhZ2U6IHN0cmluZyk6IFByb21pc2U8VFRTQXVkaW9CdWZmZXI+IHtcblx0XHRjb25zdCB1cmwgPSBgJHt0aGlzLmhvc3R9L2FwaS92MS9hdWRpby8ke2VuY29kZVVSSUNvbXBvbmVudChcblx0XHRcdGxhbmd1YWdlLFxuXHRcdCl9LyR7ZW5jb2RlVVJJQ29tcG9uZW50KHRleHQpfWA7XG5cblx0XHRyZXR1cm4gdGhpcy5mZXRjaGVyKHVybCwgeyByZXNwb25zZVR5cGU6ICdqc29uJywgbWV0aG9kOiAnR0VUJyB9KS50aGVuKFxuXHRcdFx0KHsgZGF0YToganNvbiB9KSA9PiB7XG5cdFx0XHRcdGlmICh0eXBlb2YganNvbiAhPT0gJ29iamVjdCcgfHwganNvbiA9PT0gbnVsbCkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1VuZXhwZWN0ZWQgcmVzcG9uc2UnKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoISgnYXVkaW8nIGluIGpzb24pIHx8ICFBcnJheS5pc0FycmF5KChqc29uIGFzIGFueSkuYXVkaW8pKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignVW5leHBlY3RlZCByZXNwb25zZScpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHR0eXBlOiAnYXVkaW8vbXBlZycsXG5cdFx0XHRcdFx0YnVmZmVyOiBuZXcgVWludDhBcnJheSgoanNvbiBhcyBhbnkpLmF1ZGlvKS5idWZmZXIsXG5cdFx0XHRcdH07XG5cdFx0XHR9LFxuXHRcdCk7XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIGdldFN1cHBvcnRlZExhbmd1YWdlcygpIHtcblx0XHQvLyBwcmV0dGllci1pZ25vcmVcblx0XHRyZXR1cm4gW1xuXHRcdFx0XCJhZlwiLCBcInNxXCIsIFwiYW1cIiwgXCJhclwiLCBcImh5XCIsIFwiYXNcIiwgXCJheVwiLCBcImF6XCIsIFwiYm1cIiwgXCJldVwiLFxuXHRcdFx0XCJiZVwiLCBcImJuXCIsIFwiYmhvXCIsIFwiYnNcIiwgXCJiZ1wiLCBcImNhXCIsIFwiY2ViXCIsIFwibnlcIiwgXCJ6aFwiLCBcInpoX0hBTlRcIixcblx0XHRcdFwiY29cIiwgXCJoclwiLCBcImNzXCIsIFwiZGFcIiwgXCJkdlwiLCBcImRvaVwiLCBcIm5sXCIsIFwiZW5cIiwgXCJlb1wiLCBcImV0XCIsIFwiZWVcIixcblx0XHRcdFwidGxcIiwgXCJmaVwiLCBcImZyXCIsIFwiZnlcIiwgXCJnbFwiLCBcImthXCIsIFwiZGVcIiwgXCJlbFwiLCBcImduXCIsIFwiZ3VcIiwgXCJodFwiLFxuXHRcdFx0XCJoYVwiLCBcImhhd1wiLCBcIml3XCIsIFwiaGlcIiwgXCJobW5cIiwgXCJodVwiLCBcImlzXCIsIFwiaWdcIiwgXCJpbG9cIiwgXCJpZFwiLFxuXHRcdFx0XCJnYVwiLCBcIml0XCIsIFwiamFcIiwgXCJqd1wiLCBcImtuXCIsIFwia2tcIiwgXCJrbVwiLCBcInJ3XCIsIFwiZ29tXCIsIFwia29cIixcblx0XHRcdFwia3JpXCIsIFwia3VcIiwgXCJja2JcIiwgXCJreVwiLCBcImxvXCIsIFwibGFcIiwgXCJsdlwiLCBcImxuXCIsIFwibHRcIiwgXCJsZ1wiLFxuXHRcdFx0XCJsYlwiLCBcIm1rXCIsIFwibWFpXCIsIFwibWdcIiwgXCJtc1wiLCBcIm1sXCIsIFwibXRcIiwgXCJtaVwiLCBcIm1yXCIsIFwibW5pLU10ZWlcIixcblx0XHRcdFwibHVzXCIsIFwibW5cIiwgXCJteVwiLCBcIm5lXCIsIFwibm9cIiwgXCJvclwiLCBcIm9tXCIsIFwicHNcIiwgXCJmYVwiLCBcInBsXCIsXG5cdFx0XHRcInB0XCIsIFwicGFcIiwgXCJxdVwiLCBcInJvXCIsIFwicnVcIiwgXCJzbVwiLCBcInNhXCIsIFwiZ2RcIiwgXCJuc29cIiwgXCJzclwiLFxuXHRcdFx0XCJzdFwiLCBcInNuXCIsIFwic2RcIiwgXCJzaVwiLCBcInNrXCIsIFwic2xcIiwgXCJzb1wiLCBcImVzXCIsIFwic3VcIiwgXCJzd1wiLCBcInN2XCIsXG5cdFx0XHRcInRnXCIsIFwidGFcIiwgXCJ0dFwiLCBcInRlXCIsIFwidGhcIiwgXCJ0aVwiLCBcInRzXCIsIFwidHJcIiwgXCJ0a1wiLCBcImFrXCIsIFwidWtcIiwgXCJ1clwiLFxuXHRcdFx0XCJ1Z1wiLCBcInV6XCIsIFwidmlcIiwgXCJjeVwiLCBcInhoXCIsIFwieWlcIiwgXCJ5b1wiLCBcInp1XCJcblx0XHRdO1xuXHR9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLGFBQUEsR0FBQUMsT0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFBQyxTQUFBLEdBQUFDLE9BQUEsQ0FBQUQsU0FBQTtFQUdDLFNBQUFBLFVBQVlFLEVBR21DO1FBSG5DQyxFQUFBLEdBQUFELEVBQUEsY0FHaUMsRUFBRSxHQUFBQSxFQUFBO01BRjlDRSxFQUFBLEdBQUFELEVBQUEsQ0FBQUUsT0FBc0I7TUFBdEJBLE9BQU8sR0FBQUQsRUFBQSxjQUFHRSwwQkFBWSxHQUFBRixFQUFBO01BQ3RCRyxPQUFPLEdBQUFKLEVBQUEsQ0FBQUksT0FBQTtJQUVQLElBQUksQ0FBQ0MsSUFBSSxHQUFHRCxPQUFPLGFBQVBBLE9BQU8sY0FBUEEsT0FBTyxHQUFJLHNDQUFzQztJQUM3RCxJQUFJLENBQUNGLE9BQU8sR0FBR0EsT0FBTztFQUN2QjtFQUVhTCxTQUFBLENBQUFTLFNBQUEsQ0FBQUMsY0FBYyxHQUEzQixVQUE0QkMsSUFBWSxFQUFFQyxRQUFnQjs7OztRQUNuREMsR0FBRyxHQUFHLEdBQUFDLE1BQUEsQ0FBRyxJQUFJLENBQUNOLElBQUksb0JBQUFNLE1BQUEsQ0FBaUJDLGtCQUFrQixDQUMxREgsUUFBUSxDQUNSLE9BQUFFLE1BQUEsQ0FBSUMsa0JBQWtCLENBQUNKLElBQUksQ0FBQyxDQUFFO1FBRS9CLHNCQUFPLElBQUksQ0FBQ04sT0FBTyxDQUFDUSxHQUFHLEVBQUU7VUFBRUcsWUFBWSxFQUFFLE1BQU07VUFBRUMsTUFBTSxFQUFFO1FBQUssQ0FBRSxDQUFDLENBQUNDLElBQUksQ0FDckUsVUFBQ2hCLEVBQWM7Y0FBTmlCLElBQUksR0FBQWpCLEVBQUEsQ0FBQWtCLElBQUE7VUFDWixJQUFJLE9BQU9ELElBQUksS0FBSyxRQUFRLElBQUlBLElBQUksS0FBSyxJQUFJLEVBQUU7WUFDOUMsTUFBTSxJQUFJRSxTQUFTLENBQUMscUJBQXFCLENBQUM7O1VBRTNDLElBQUksRUFBRSxPQUFPLElBQUlGLElBQUksQ0FBQyxJQUFJLENBQUNHLEtBQUssQ0FBQ0MsT0FBTyxDQUFFSixJQUFZLENBQUNLLEtBQUssQ0FBQyxFQUFFO1lBQzlELE1BQU0sSUFBSUgsU0FBUyxDQUFDLHFCQUFxQixDQUFDOztVQUczQyxPQUFPO1lBQ05JLElBQUksRUFBRSxZQUFZO1lBQ2xCQyxNQUFNLEVBQUUsSUFBSUMsVUFBVSxDQUFFUixJQUFZLENBQUNLLEtBQUssQ0FBQyxDQUFDRTtXQUM1QztRQUNGLENBQUMsQ0FDRDs7O0dBQ0Q7RUFFYTFCLFNBQUEsQ0FBQTRCLHFCQUFxQixHQUFuQztJQUNDO0lBQ0EsT0FBTyxDQUNOLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFDMUQsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUNqRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUNqRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUNoRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQzdELElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFDM0QsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUM1RCxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQ2pFLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFDM0QsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUMzRCxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUNoRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFDdEUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FDOUM7RUFDRixDQUFDO0VBQ0YsT0FBQTVCLFNBQUM7QUFBRCxDQW5EQSxDQW1EQyIsImlnbm9yZUxpc3QiOltdfQ==
